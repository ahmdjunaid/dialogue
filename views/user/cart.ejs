<!-- views/account.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dialogue Digital - Manage Account</title>
    <link rel="stylesheet" href="/css/user/cart.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <%- include('../../views/partials/user/header') %>

        <div class="main-content">
            <div class="cart_container">
                <h2 class="text-center">MY CART</h2>
                <!-- Products table -->
                <table class="cart_products_table">
                    <thead>
                        <tr class="cart_header_row">
                            <th class="cart_header_cell cart_product_header">Product Details</th>
                            <th class="cart_header_cell cart_price_header">Price</th>
                            <th class="cart_header_cell cart_quantity_header">Quantity</th>
                            <th class="cart_header_cell cart_total_header">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% let availableProducts = [] %>
                        <% let stockOut = [] %>
                        <% products.forEach(product=> { %>
                            <tr class="cart_item_row">
                                <td class="cart_product_cell">
                                    <div class="cart_product_wrapper">
                                        <div class="cart_remove_btn_wrapper">
                                            <button class="cart_remove_btn">×</button>
                                        </div>
                                        <div class="cart_product_img_wrapper">
                                            <img src="../uploads/<%= product.productId.productImage[0] %>"
                                                alt="<%= product.name %>" class="cart_product_img">
                                        </div>
                                        <div class="cart_product_info">
                                            <h3 class="cart_product_title">
                                                <%= product.name %>
                                            </h3>
                                            <p class="cart_product_desc">
                                                <%= product.description %>
                                            </p>
                                        </div>
                                    </div>
                                </td>
                                <td class="cart_price_cell">₹<%= product.price.toLocaleString() %>
                                </td>
                                <td class="cart_quantity_cell">
                                    <%if(product.productId.isDeleted==false && product.productId.stock !==0){%>
                                        <% availableProducts.push(product) %>
                                        <div class="quantity_control">
                                            <button class="quantity_btn decrease_btn"
                                                data-product-id="<%= product.productId._id %>">-</button>
                                            <span class="quantity_value" id="qty">
                                                <%= product.quantity %>
                                            </span>
                                            <button class="quantity_btn increase_btn"
                                                data-product-id="<%= product.productId._id %>">+</button>
                                        </div>
                                        <%}else{%>
                                            <% stockOut.push(product) %>
                                            <button class="quantity_btn decrease_btn"
                                                data-product-id="<%= product.productId._id %>"
                                                style="display: none;"></button>
                                            <span class="quantity_value">
                                                0
                                            </span>
                                            <button class="quantity_btn increase_btn"
                                                data-product-id="<%= product.productId._id %>"
                                                style="display: none;"></button>
                                            <%}%>
                                </td>
                                <%if(product.productId.isDeleted==false && product.productId.stock !==0){%>
                                    <td class="cart_total_cell">₹<%= product.totalPrice.toLocaleString() %>
                                    </td>
                                    <%}else{%>
                                        <td class="cart_total_cell"><button disabled="disabled"
                                                class="btn btn-danger">SOLD OUT/UNLISTED</button>
                                        </td>
                                        <%}%>
                            </tr>
                            <% }); %>
                    </tbody>
                    <form action="/checkout" method="post">
                        <% availableProducts.forEach(product => { %>
                            <input type="hidden" name="products[]" value="<%= JSON.stringify(product) %>">
                          <% }) %>
                          <% stockOut.forEach(product => { %>
                            <input type="hidden" name="stockOut[]" value="<%= JSON.stringify(product) %>">
                          <% }) %>
                        <button id="submitBtn" hidden></button>
                    </form>

                </table>


                    <div class="cart_summary_wrapper">
                        <h2 class="cart_totals_heading">CART TOTALS</h2>

                        <table class="cart_totals_table">
                            <tr class="cart_totals_row">
                                <td class="cart_totals_label">Subtotal</td>
                                <td class="cart_totals_value">₹<%= cartTotals.subtotal.toLocaleString() %>
                                </td>
                            </tr>
                            <tr class="cart_totals_row">
                                <td class="cart_totals_label">Discount</td>
                                <td class="cart_totals_value">₹<%= cartTotals.discount.toLocaleString() %>
                                </td>
                            </tr>
                            <tr class="cart_totals_row">
                                <td class="cart_totals_label">Delivery</td>
                                <td class="cart_totals_value">FREE</td>
                            </tr>
                            <tr class="cart_totals_row cart_grand_total_row">
                                <td class="cart_totals_label cart_grand_total_label">TOTAL</td>
                                <td class="cart_totals_value cart_grand_total_value">₹<%=
                                        cartTotals.total.toLocaleString()%>
                                </td>
                            </tr>
                        </table>

                        <div class="cart_coupon_wrapper">
                            <input type="text" class="cart_coupon_input" placeholder="Coupon Code">
                            <button class="cart_apply_coupon_btn">Apply Coupon</button>
                        </div>

                        <button class="cart_checkout_btn" onclick="submitForm()">Proceed to Checkout</button>
                    </div>
            </div>
        </div>




        <input type="hidden" value="<%= message %>" id="err">
        <%- include('../../views/partials/user/footer') %>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                const message = document.getElementById('err').value;
                if (message) {
                    swal.fire(message)
                }

                function submitForm(){
                    document.getElementById('submitBtn').click()
                }

                document.getElementById('payment-form').addEventListener('submit', function(e) {
                e.preventDefault();
                const selectedMethod = document.querySelector('input[name="payment"]:checked').value;
                swal.fire('Payment method selected: ' + selectedMethod);
                // Here you would typically handle the form submission
                });

                document.addEventListener('DOMContentLoaded', function () {

                    const increaseButtons = document.querySelectorAll('.increase_btn');
                    const decreaseButtons = document.querySelectorAll('.decrease_btn');

                    increaseButtons.forEach(button => {
                        button.addEventListener('click', function () {
                            updateQuantity(this.dataset.productId, 'increase');
                        });
                    });

                    decreaseButtons.forEach(button => {
                        button.addEventListener('click', function () {
                            const quantityElement = this.parentElement.querySelector('.quantity_value');
                            const currentQuantity = parseInt(quantityElement.textContent);


                            if (currentQuantity > 1) {
                                updateQuantity(this.dataset.productId, 'decrease');
                            } else {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Oops!',
                                    text: 'Quantity cannot be less than 1',
                                });
                            }
                        });
                    });

                    function updateQuantity(productId, action) {
                        fetch('/update-cart-quantity', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                productId: productId,
                                action: action
                            }),
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Success!',
                                        text: 'Cart updated successfully',
                                        timer: 1500,
                                        showConfirmButton: false
                                    }).then(() => window.location.reload());
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error!',
                                        text: data.message,
                                    });
                                }
                            })
                            .catch(error => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops!',
                                    text: 'Failed to update cart. Please try again.',
                                });
                            });
                    }

                    const removeButtons = document.querySelectorAll('.cart_remove_btn');
                    removeButtons.forEach(button => {
                        button.addEventListener('click', function () {
                            const productRow = this.closest('.cart_item_row');
                            const productId = productRow.querySelector('.quantity_btn').dataset.productId;

                            removeFromCart(productId);
                        });
                    });

                    function removeFromCart(productId) {
                        Swal.fire({
                            title: 'Are you sure?',
                            text: 'You won\'t be able to undo this!',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'Yes, remove it!',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                fetch('/remove-from-cart', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ productId: productId }),
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire({
                                                icon: 'success',
                                                title: 'Removed!',
                                                text: 'Item removed from cart.',
                                                timer: 1500,
                                                showConfirmButton: false
                                            }).then(() => window.location.reload());
                                        } else {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Error!',
                                                text: data.message,
                                            });
                                        }
                                    })
                                    .catch(error => {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops!',
                                            text: 'Failed to remove item. Please try again.',
                                        });
                                    });
                            }
                        });
                    }
                });
            </script>

</body>

</html>
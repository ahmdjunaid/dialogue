<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details - Dialogue Digital</title>
    <style>
        :root {
            --bg-dark: #0f172a;
            --bg-secondary: #1e293b;
            --bg-tertiary: #2d3748;
            --border-color: #374151;
            --text-color: #ffffff;
            --blue-600: #2563eb;
            --blue-700: #1d4ed8;
            --green-600: #16a34a;
            --green-700: #15803d;
            --red-900: #7f1d1d;
            --gray-600: #4b5563;
            --gray-700: #374151;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: var(--bg-dark);
            color: var(--text-color);
            line-height: 1.6;
        }

        .main-container {
            display: flex;
            height: 100vh;
            width: 100%;
        }

        .sidebar {
            width: 250px;
            background-color: var(--bg-secondary);
            padding: 20px;
        }

        .main-content {
            flex: 1;
            padding: 24px;
            overflow: auto;
        }

        .order-details {
            background-color: var(--bg-secondary);
            border-radius: 8px;
            border: 1px solid var(--border-color);
        }

        .order-details-header {
            padding: 24px;
            border-bottom: 1px solid var(--border-color);
        }

        .order-details-header h2 {
            font-size: 1.25rem;
            font-weight: bold;
        }

        .order-details-body {
            padding: 24px;
        }

        .grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 24px;
            margin-bottom: 24px;
        }

        .section-title {
            font-size: 1.125rem;
            font-weight: 600;
            margin-bottom: 12px;
        }

        .info-section {
            space-y: 8px;
        }

        .info-section p {
            margin-bottom: 8px;
        }

        .status-form select {
            width: 100%;
            padding: 8px;
            background-color: var(--bg-tertiary);
            border: 1px solid var(--border-color);
            color: var(--text-color);
            border-radius: 4px;
        }

        .status-form button {
            width: 100%;
            padding: 8px;
            margin-top: 8px;
            background-color: var(--blue-600);
            color: var(--text-color);
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .status-form button:hover {
            background-color: var(--blue-700);
        }

        .order-items {
            margin-bottom: 24px;
        }

        .order-items-table {
            width: 100%;
            background-color: var(--bg-tertiary);
            border-radius: 4px;
        }

        .order-items-table thead {
            border-bottom: 1px solid var(--border-color);
        }

        .order-items-table th,
        .order-items-table td {
            padding: 12px;
            text-align: left;
        }

        .order-items-table th:nth-child(2),
        .order-items-table td:nth-child(2) {
            text-align: center;
        }

        .order-items-table th:last-child,
        .order-items-table td:last-child {
            text-align: right;
            width: 0em;
        }

        .order-items-table tr:not(:last-child) {
            border-bottom: 1px solid var(--border-color);
        }

        .order-items-table .total {
            font-weight: bold;
        }

        .return-request {
            background-color: var(--red-900);
            padding: 16px;
            border-radius: 4px;
        }

        .return-request-buttons {
            display: flex;
            gap: 16px;
        }

        .return-request-buttons button {
            flex: 1;
            padding: 8px;
            border: none;
            border-radius: 4px;
            color: var(--text-color);
            cursor: pointer;
        }

        .reject-button,
        .accept-button {
            margin: 4px;
            padding: 6px 12px;
            font-size: 0.875rem;
        }

        .reject-button {
            background-color: var(--gray-600);
        }

        .reject-button:hover {
            background-color: var(--gray-700);
        }

        .accept-button {
            background-color: var(--green-600);
        }

        .accept-button:hover {
            background-color: var(--green-700);
        }

        .return-status {
            padding: 16px;
            border-radius: 4px;
        }

        .return-status-accepted {
            background-color: var(--green-900);
        }

        .return-status-rejected {
            background-color: var(--red-900);
        }

        .product-return-buttons {
            display: flex;
            justify-content: flex-end;
            margin-top: 8px;
        }

        .message {
            margin-top: 12px;
            padding: 12px;
            border-radius: 4px;
        }

        .success-message {
            background-color: var(--green-600);
            color: var(--text-color);
        }

        .error-message {
            background-color: var(--red-900);
            color: var(--text-color);
        }

        .order-summary {
    background-color: #fff;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.order-summary h3 {
    font-size: 16px;
    margin-bottom: 15px;
    color: #333;
}

.summary-details {
    padding: 15px;
    background-color: #f9f9f9;
    border-radius: 6px;
}

.summary-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
    font-size: 14px;
    color: #333;
}

.summary-row.total {
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px solid #ddd;
    font-size: 16px;
    color: #000;
}

.amount.discount {
    color: #1a9349;
}

.summary-row.shipping {
    margin-bottom: 15px;
}

.total-amount {
    color: #192857;
}
    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>

<body>
    <div class="main-container">
        <!-- Sidebar Placeholder -->
        <div class="sidebar">
            <!-- Your sidebar content goes here -->
            <%-include("../../views/partials/admin/aside")%>
        </div>

        <main class="main-content">
            <div class="order-details">
                <div class="order-details-header">
                    <h2>Order Details</h2>
                </div>

                <div class="order-details-body">
                    <!-- Order Information -->
                    <div class="grid">
                        <div>
                            <h3 class="section-title">Order Information</h3>
                            <div class="info-section">
                                <p><strong>Order ID:</strong>
                                    <%= order.orderId %>
                                </p>
                                <p><strong>Customer Name:</strong>
                                    <%= order.userId.username %>
                                </p>
                                <p><strong>Order Date:</strong>
                                    <%= order.createdOn.toLocaleDateString('en-US', { year: 'numeric' , month: 'short' ,
                                        day: 'numeric' }) %>
                                </p>
                                <p><strong>Shipping Address:</strong>
                                    <p>
                                        <% if (order.shippingaddress.landmark) { %>
                                            <%= order.shippingaddress.landmark %> -
                                                <% } %>
                                                    <%= order.shippingaddress.city %>
                                    </p>
                                    <p>
                                        <%= order.shippingaddress.state %> - <%= order.shippingaddress.pincode %>
                                    </p>
                                    <p>
                                        Phone: <%= order.shippingaddress.mobile %>
                                            <% if (order.shippingaddress.altNumber) { %>,
                                                <%= order.shippingaddress.altNumber %>
                                                    <% } %>
                                    </p>
                                </p>
                            </div>
                        </div>
                        <div>
                            <p>
                                <%= order.status %>
                            </p>
                            <h3 class="section-title">Order Status</h3>
                            <form id="order-status-form" class="status-form" onsubmit="updateOrderStatus(event)">
                                <input type="hidden" name="orderId" value="<%= order.orderId %>">

                                <select name="status" id="order-status-select" <%=(order.status === "Return Requested" ||
                                    order.status==="Returned" || order.status === "Return Rejected" || order.status === "Cancelled" ) ? "disabled" : "" %>>
                                    <% ["Pending", "Processing" , "Shipped" , "Delivered" , "Cancelled" , "Return Requested" , 
                                   "Returned" , "Return Rejected"].forEach(option=> { %>
                                        <option value="<%= option %>" <%=order.status===option ? "selected" : "" %>><%=
                                                option %>
                                        </option>
                                        <% }) %>
                                </select>

                                <button <%=(order.status === "Return Requested" ||
                                order.status==="Returned" || order.status === "Return Rejected" || order.status === "Cancelled" ) ? "disabled" : "" %> type="submit">Update Status</button>
                            </form>
                            <div id="order-status-message"></div>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="order-items">
                        <h3 class="section-title">Order Items</h3>
                        <div class="order-items-table">
                            <% 
                            let showReturnColumns = false;
                            let returnCol;
                            order.orderedItems.forEach(item => {
                                if (item.status === 'Return Requested' && order.status !== 'Return Requested') {
                                    showReturnColumns = true;
                                }else if(item.status === 'Returned'){
                                    returnCol = true
                                }
                            });
                        %>
                        
                        <table>
                            <thead>
                                <tr>
                                    <th class="text-center">Product</th>
                                    <th class="text-center">Quantity</th>
                                    <th class="text-center">Price</th>
                                    <% if (showReturnColumns) { %>
                                        <th class="text-center">Reason for return</th>
                                        <th class="text-center">Return</th>
                                    <% } %>
                                    <% if (returnCol) { %>
                                        <th class="text-center"></th>
                                    <% } %>
                                </tr>
                            </thead>
                            <tbody>
                                <% order.orderedItems.forEach((item, index) => { %>
                                    <tr>
                                        <td class="text-center"><%= item.product.productName %></td>
                                        <td class="text-center"><%= item.quantity %></td>
                                        <td class="text-center"><%= item.product.salePrice %></td>
                        
                                        <% if (item.status === 'Return Requested' && order.status !== 'Return Requested') { %>
                                            <td class="text-center"><%= item.returnReason %></td>
                                            <td class="text-center">
                                                <div class="product-return-buttons">
                                                    <button class="btn btn-danger me-2"
                                                        onclick="processProductReturn('<%= order.orderId %>', '<%= item.product._id %>', 'reject')">
                                                        Reject
                                                    </button>
                                                    <button class="btn btn-success"
                                                        onclick="processProductReturn('<%= order.orderId %>', '<%= item.product._id %>', 'accept')">
                                                        Accept
                                                    </button>
                                                </div>
                                                <div id="product-return-message-<%= item.product._id %>"></div>
                                            </td>
                                        <% } else if (item.status === 'Returned') { %>
                                            <td colspan="<%= showReturnColumns ? 2 : 1 %>">
                                                <button class="btn btn-info">Returned</button>
                                            </td>
                                        <% } %>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                        
                        </div>
                    </div>

                    <!-- Return Request -->
                    <% if(order.status=='Return Requested' ){ %>
                        <div class="return-request">
                            <h3 class="section-title">Return Request</h3>
                            <p><strong>Reason:</strong> <%= order.returnReason %></p>
                            <form id="order-return-form" onsubmit="processOrderReturn(event)">
                                <input type="hidden" name="orderId" value="<%= order.orderId %>">
                                <div class="return-request-buttons">
                                    <button type="submit" name="returnDecision" value="reject" class="reject-button">
                                        Reject Return
                                    </button>
                                    <button type="submit" name="returnDecision" value="accept" class="accept-button">
                                        Accept Return
                                    </button>
                                </div>
                            </form>
                            <div id="order-return-message"></div>
                        </div>
                        <%}%>

                        <div class="order-summary">
                            <h3>Payment Summary</h3>
                            <div class="summary-details">
                                <div class="summary-row">
                                    <span>Items Total</span>
                                    <span class="amount">₹<%= order.totalPrice.toLocaleString() %></span>
                                </div>
                                <% if(order.discount> 0) { %>
                                    <div class="summary-row">
                                        <span>Discount</span>
                                        <span class="amount discount">-₹<%= order.discount.toLocaleString() %></span>
                                    </div>
                                    <% } %>
                                        <% if(order.couponDiscount> 0) { %>
                                            <div class="summary-row">
                                                <span>Coupon Applied</span>
                                                <span class="amount discount">-₹<%=
                                                        order.couponDiscount.toLocaleString() %></span>
                                            </div>
                                            <% } %>
                                            <% if(order.revokedCoupon> 0) { %>
                                                <div class="summary-row">
                                                    <span>Revoked Coupon</span>
                                                    <span class="amount discount text-danger">+₹<%=
                                                            order.revokedCoupon.toLocaleString() %></span>
                                                </div>
                                                <% } %>
                                                <% if(order.offerAmount> 0) { %>
                                                    <div class="summary-row">
                                                        <span>Offer Discount</span>
                                                        <span class="amount discount">-₹<%=
                                                                order.offerAmount.toLocaleString() %></span>
                                                    </div>
                                                    <% } %>
                                                        <div class="summary-row">
                                                            <span>Cancelled/Returned</span>
                                                            <span class="amount text-danger">₹<%=
                                                                order.cancelOrReturn.toLocaleString() %>
                                                            </span>
                                                        </div>
                                                        <div class="summary-row shipping">
                                                            <span>Shipping Fee</span>
                                                            <span class="amount">
                                                                <%= order.shippingFee> 0 ? '₹' +
                                                                    order.shippingFee.toLocaleString()
                                                                    : 'FREE' %>
                                                            </span>
                                                        </div>
                                                        <div class="summary-row total">
                                                            <span><strong>Order
                                                                    Total</strong></span>
                                                            <span class="amount total-amount"><strong>₹
                                                                    <%= order.finalAmount -  order.cancelOrReturn %>
                                                                </strong></span>
                                                        </div>
                            </div>
                        </div>


                </div>
            </div>
        </main>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Function to update order status
            window.updateOrderStatus = function (event) {
                event.preventDefault();
                const form = event.target;
                const formData = new FormData(form);

                fetch('/admin/update-order-status', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: new URLSearchParams(formData).toString()
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: data.message,
                                timer: 2000,
                                showConfirmButton: false
                            }).then(()=>{
                                location.reload();
                            })
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: data.message
                            }).then(()=>{
                                location.reload();
                            })
                        }
                        
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops!',
                            text: 'An error occurred. Please try again.'
                        });
                    });
            }

            // Function to process product return
            window.processProductReturn = function (orderId, productId, action) {
                fetch('/admin/process-product-return', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || ''
                    },
                    body: JSON.stringify({ orderId, productId, action })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Return Processed',
                                text: data.message,
                                timer: 2000,
                                showConfirmButton: false
                            }).then(()=>{
                                location.reload();
                            })
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: data.message
                            }).then(()=>{
                                location.reload();
                            })
                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops!',
                            text: 'An error occurred. Please try again.'
                        });
                    });
            }

            // Function to process order return
            window.processOrderReturn = function (event) {
                event.preventDefault();
                const form = event.target;
                const formData = new FormData(form);
                const action = event.submitter.value;
                const orderId = formData.get('orderId');

                fetch('/admin/process-order-return', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || ''
                    },
                    body: JSON.stringify({ orderId, action })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Order Return Processed',
                                text: data.message,
                                timer: 2000,
                                showConfirmButton: false
                            }).then(()=>{
                                location.reload();
                            })
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: data.message
                            }).then(()=>{
                                location.reload();
                            })
                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops!',
                            text: 'An error occurred. Please try again.'
                        });
                    });
            }
        });
    </script>
</body>

</html>